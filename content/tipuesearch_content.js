var tipuesearch = {"pages": [{'title': 'Home', 'text': 'week2~5 \n week6~9 \n week10~14 \n week15~18 \n', 'tags': '', 'url': 'Home.html'}, {'title': 'Weeks', 'text': '', 'tags': '', 'url': 'Weeks.html'}, {'title': 'week 2~5', 'text': '建立自己的倉儲和cad2019網站 \n 並下載子cmsimde建立新的網頁。 \n \n week 3 \n 執行編譯 Solvespace \n 編譯步驟: \n 先將 Y:\\portablegit\\bin\\sh.exe 改名為 sh_rename_for_solvespace.exe \n git version 查驗 git 版本 \n git 2.13 版本以上, 可以使用下列 git clone\xa0 --recurse-submodules 取得所有子模組資料 \n git clone --recurse-submodules https://github.com/solvespace/solvespace.git solvespace \n edit Y:\\tmp\\solvespace\\extlib\\angle\\CMakeLists.txt comment out line 713 and 714 \n #list(APPEND ANGLE_DEFINITIONS #"-DANGLE_PRELOADED_D3DCOMPILER_MODULE_NAMES={ \\"d3dcompiler_47.dll\\", \\"d3dcompiler_46.dll\\", \\"d3dcompiler_43.dll\\" }") endif() \n 需要手動進行 libpng.dll.a 的編譯, 並改名為 libpng_static.a, 並放到編譯系統的 lib 目錄中: \n cd solvespace \n cd extlib \n cd libpng \n mkdir build \n cd build \n cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release mingw32-make \n rename\xa0libpng.dll.a to libpng_static.a and copy to\xa0Y:\\msys64\\mingw64\\lib \n 接著回到 solvespace 原始碼目錄, 建立 build 目錄後進入 build 目錄, 執行: \n cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release mingw32-make \n \n \n \n week4 \n 完成WEEK3的倉儲設定以及網站。 \n week5 \n solvespace建立模型。 \n \n 自評成績， \n \n', 'tags': '', 'url': 'week 2~5.html'}, {'title': 'week 6~9', 'text': "\n week 6 \n 建立汽車模型 \n \n 使用v-rap控制模型 \n \n \n week7 \n 網際 V-rep 模型控制 \n \n 先到Task1裡，下載V-rep 3.6.1 rev 4.7z和 web_vrep2.zip。 \n 將兩個檔案都解壓縮在自己的隨身碟tmp裡面。 \n 打開自己的start_mdecourse，輸入regedit開啟程式。 \n 將HKEY_CLASSES_ROOT內的，.py和.py_auto_le刪除。 \n 開啟web_vrep2的app.py，點Tools的Go。 \n 再點開剛剛載好的V-REP3\\V-REP_PRO_EDU > vrep.exe 。 \n 開啟後將web_vrep2的two_wheeler.ttt拖移進去。 \n 到http://127.0.0.1:5000/裡面，就可以操控了。 \n \n \n \n 與互相評分。 \n 新增啟動與停止按鈕 \n 1.進入2b Task 1的 #14 ，準備操作。 \n 2.開啟start_mdecoursr，進入web_vrep2。 \n 3.編輯templates裡面的controls.html。 \n 4.加入start 和 stop 的botton，直接複製改。 \n 5.編輯vrep_linefollower.py，if加入判斷式。 if direction == 'start': vrep.simxStartSimulation(self.clientID, vrep.simx_opmode_oneshot) if direction == 'stop': vrep.simxStopSimulation(self.clientID, vrep.simx_opmode_oneshot) \n 6.補上else: ，完成後儲存，記得語法要排好。 \n 7.開啟v-rep程式，將two_wheeler.ttt檔案拖入。 \n 8.再開啟app.py 的go進入網址localhost:5000。 \n 9.這樣子就可以進行start 以及 stop的操作了。 \n \n Solvespace 納入學號 \n 1.先到自己tmp下的solvespace\\build\\src\\CMakeFiles\\solvespace.dir。 \n 2.刪掉solvespace.cpp.obj檔案，開啟start_mdecourse。 \n 3.再到solvespace\\src找到solvespace.cpp用編輯器打開。 \n 4.Ctrl+f 搜尋GPL，把Message下面的This is SolveSpace 。 \n 5.改成This is SolveSpace is compiled by 40723210。 \n 6.進入solvespace\\build，輸入mingw32-make，等待完成。 \n 7.開啟solvespace.exe，點help > about 就完成了驗證。 \n", 'tags': '', 'url': 'week 6~9.html'}, {'title': 'Week10~14', 'text': '各組開始協同倉儲 \n Batch Command設定 \n \n', 'tags': '', 'url': 'Week10~14.html'}, {'title': 'Week15~18', 'text': '', 'tags': '', 'url': 'Week15~18.html'}, {'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules \xa0 https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n \n \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'Develop.html'}]};